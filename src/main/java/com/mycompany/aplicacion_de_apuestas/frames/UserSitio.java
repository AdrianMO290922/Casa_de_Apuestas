/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.aplicacion_de_apuestas.frames;

import com.google.gson.Gson;
import com.mycompany.aplicacion_de_apuestas.Carrera;
import com.mycompany.aplicacion_de_apuestas.Corredor;
import com.mycompany.aplicacion_de_apuestas.Usuario;
import java.awt.GridLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author adria
 */
public class UserSitio extends javax.swing.JFrame {

    ArrayList<Corredor> listRuns = new ArrayList<>();
    ArrayList<Corredor> listRuns2 = new ArrayList<>();
    private GridLayout grid = new GridLayout(1, 1);
     ArrayList<Carrera> listCarr = new ArrayList<>();
    Carrera carreraP;
    Usuario usuario;
    

    public UserSitio() {
        initComponents();
        jPanel1.setLayout(grid);
        setLocationRelativeTo(null);
    }

    public UserSitio(Usuario usuario) {
        initComponents();
        jPanel1.setLayout(grid);
        setLocationRelativeTo(null);
        this.usuario = usuario;
        System.out.println("Mi idaP: "+usuario.getIdApuesta());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clockFace1 = new org.edisoncor.gui.varios.ClockFace();
        labelBienvenida = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btnRApuesta = new javax.swing.JButton();
        labelDinero = new javax.swing.JLabel();
        labelCSesion = new javax.swing.JLabel();
        labelInicial = new org.edisoncor.gui.label.LabelRound();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        boxCarreras = new javax.swing.JComboBox<>();
        labelisFinalizada = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        labelBienvenida.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelBienvenida.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 592, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        btnRApuesta.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRApuesta.setText("Registrar Apuesta");
        btnRApuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRApuestaActionPerformed(evt);
            }
        });

        labelDinero.setText("jLabel2");

        labelCSesion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelCSesion.setForeground(new java.awt.Color(255, 59, 59));
        labelCSesion.setText("Cerrar sesion");
        labelCSesion.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        labelCSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelCSesionMouseClicked(evt);
            }
        });

        labelInicial.setText("labelRound1");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("ID");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Corredor");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Carreras Ganadas");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Apuestas");

        boxCarreras.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxCarrerasItemStateChanged(evt);
            }
        });

        labelisFinalizada.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelisFinalizada.setForeground(new java.awt.Color(255, 59, 59));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelCSesion))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(btnRApuesta)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addComponent(labelDinero, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(boxCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelisFinalizada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 26, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel6))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelBienvenida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clockFace1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clockFace1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelBienvenida)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCSesion)
                            .addComponent(labelInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDinero)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(boxCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelisFinalizada)))
                        .addGap(18, 18, 18)
                        .addComponent(btnRApuesta)
                        .addGap(38, 38, 38))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelCSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelCSesionMouseClicked
        guardarData();
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_labelCSesionMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        labelBienvenida.setText("Bienvenido " + usuario.getNombre());
        labelInicial.setText(usuario.getNombre().charAt(0) + "");
        labelDinero.setText("$" + usuario.getDinero());

        try {
            BufferedReader br = new BufferedReader(new FileReader("C:/Users/adria/Documents/Archivos del Proyecto JSON/Corredores.json"));
            String lectura = null;
            String resultado = "";
            while ((lectura = br.readLine()) != null) {
                resultado += lectura;
            }
            br.close();

            JSONParser parser = new JSONParser();
            JSONArray jsonArray = (JSONArray) parser.parse(resultado);

            listRuns2.clear();
            for (int i = 0; i < jsonArray.size(); i++) {
                Corredor corredor = new Gson().fromJson(jsonArray.get(i).toString(), Corredor.class);
                listRuns2.add(corredor);

            }
            System.out.println("Se cargaron los Runscorrectamente");
            actualizaCorredores();
        } catch (Exception e) {
            e.printStackTrace();
        }
         /////Carreras/////////////////////////////////////////////////////////////////////////////////////
         try {
            BufferedReader br = new BufferedReader(new FileReader("C:/Users/adria/Documents/Archivos del Proyecto JSON/Carreras.json"));
            String lectura = null;
            String resultado = "";
            while ((lectura = br.readLine()) != null) {
                resultado += lectura;
            }
            br.close();

            JSONParser parser = new JSONParser();
            JSONArray jsonArray = (JSONArray) parser.parse(resultado);

            listCarr.clear();
            
            for (int i = 0; i < jsonArray.size(); i++) {
                Carrera carrera = new Gson().fromJson(jsonArray.get(i).toString(),Carrera.class);
                listCarr.add(carrera);

            }
             System.out.println("Se cargaron las Carreras correctamente");
            //actualizaCorredores();
        } catch (Exception e) {
            e.printStackTrace();
        }
         for(Carrera carrera:listCarr){
             //boxCarreras.addItem(String.valueOf(carrera.getId()));
             
             boxCarreras.addItem(carrera.getNombre());
         }
         
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            String json = new Gson().toJson(listRuns2);

            BufferedWriter bw = new BufferedWriter(new FileWriter("C:/Users/adria/Documents/Archivos del Proyecto JSON/Corredores.json", false));
            bw.write(json);
            bw.close();
            System.out.println("Se guardaron los Runs correctamente");
        } catch (Exception e) {
            e.printStackTrace();
        }
         /////////////////////////////////////////////Carreras/////////////////////////////////////////////////////////////
        try {
            String json = new Gson().toJson(listCarr);

            BufferedWriter bw = new BufferedWriter(new FileWriter("C:/Users/adria/Documents/Archivos del Proyecto JSON/Carreras.json", false));
            bw.write(json);
            bw.close();
            System.out.println("Se guardaron las Carrers correctamente");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnRApuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRApuestaActionPerformed
        if(carreraP.isDisponible()){
        guardarData();
        usuario.setDinero(0);
        new Registro_Apuesta(usuario,carreraP.getId()).setVisible(true);
        dispose();
        }else if(carreraP.isFinalizada()){
            JOptionPane.showMessageDialog(null, "Lo sentimos esta carrera ya fue finalizada");
        }else{
            JOptionPane.showMessageDialog(null, "No se recomienda apostar, aun hay corredores por asignar");
        }
    }//GEN-LAST:event_btnRApuestaActionPerformed

    private void boxCarrerasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxCarrerasItemStateChanged
        for(Carrera carrera:listCarr){
            
            if(boxCarreras.getSelectedItem().toString().equals(carrera.getNombre())){
                listRuns = carrera.getListRuns();
                carreraP = carrera;
                actualizaCorredores();
                if(carreraP.isFinalizada()){
                    labelisFinalizada.setText("Carrera Finalizada");
                    for(Usuario user: carreraP.getListUsers()){
                        if(user.getCuenta().equals(usuario.getCuenta())){
                            if(user.getDinero()>0){
                            JOptionPane.showMessageDialog(null, "Ganaste en la carrera: "+carreraP.getNombre()+"\n" + "Gano: "+carreraP.getGanador().getNombre()+"\n"+"Gano: " +user.getDinero());
                            //usuario.setDinero(user.getDinero()+usuario.getDinero());
                            usuario.setDinero(user.getDinero());
                            labelDinero.setText("$"+usuario.getDinero());
                            break;
                            }else{
                                //JOptionPane.showMessageDialog(null, "Finalizo la Carrera: "+carreraP.getNombre()+"\n" +"Gano: "+carreraP.getNombre());
                                labelisFinalizada.setText("Carrera Finalizada\n"+" Gano: "+carreraP.getGanador().getNombre());
                            }
                            
                        }
                    }
                }else{
                    labelisFinalizada.setText("");
                }
            }
            
        }//fin del for
    }//GEN-LAST:event_boxCarrerasItemStateChanged
    public void actualizaCorredores() {
        jPanel1.removeAll();
        grid.setRows(listRuns.size());
        for (Corredor corredor : listRuns) {
            //PanelCategoria panelCat = new PanelCategoria(cat, listCategoria); 
            PanelCorredor panelCo = new PanelCorredor(corredor, listRuns);
            jPanel1.add(panelCo);
            //jPanel1.add(panelCat);
        }
        jPanel1.updateUI();
    }
    public void guardarData() {
        try {
            String json = new Gson().toJson(listRuns2);

            BufferedWriter bw = new BufferedWriter(new FileWriter("C:/Users/adria/Documents/Archivos del Proyecto JSON/Corredores.json", false));
            bw.write(json);
            bw.close();
            System.out.println("Se supone que se guardaron correctamente");
        } catch (Exception e) {
            e.printStackTrace();
        }
        ///////////////////////////Carreras/////////////////////////////////////
      try {
            String json = new Gson().toJson(listCarr);

            BufferedWriter bw = new BufferedWriter(new FileWriter("C:/Users/adria/Documents/Archivos del Proyecto JSON/Carreras.json", false));
            bw.write(json);
            bw.close();
            System.out.println("Se guardaron las carreras correctamente");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserSitio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserSitio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserSitio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserSitio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserSitio().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCarreras;
    private javax.swing.JButton btnRApuesta;
    private org.edisoncor.gui.varios.ClockFace clockFace1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBienvenida;
    private javax.swing.JLabel labelCSesion;
    private javax.swing.JLabel labelDinero;
    private org.edisoncor.gui.label.LabelRound labelInicial;
    private javax.swing.JLabel labelisFinalizada;
    // End of variables declaration//GEN-END:variables
}
